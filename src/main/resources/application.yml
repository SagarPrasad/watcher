server:
  port: 9192

spring:
  cloud:
    function.definition: consumer
    stream:
      bindings:
        producer-out-0:
          destination: audit
          group: audit-producer
          contentType: application/json
#          producer:
#            useNativeEncoding: true
        consumer-in-0:
          destination: audit
          group: audit-consumer
          contentType: application/json
          consumer:
            batch-mode: true
#            useNativeDecoding: true
      kafka:
        binder:
          brokers: localhost:9092
          consumer-properties:
            max.poll.records: 5
            fetch.min.bytes: 10000
            fetch.max.wait.ms: 10000
#        bindings:
#          producer-out-0:
#            producer:
#              configuration:
#                cloudevents:
#                  serializer:
#                    encoding: STRUCTURED
#                    event_format: application/cloudevents+json
#                key.serializer: org.apache.kafka.common.serialization.StringSerializer
##                value.serializer: com.sagar.audit.watcher.domain.MessageSerializer
#                value.serializer: io.cloudevents.kafka.CloudEventSerializer
#          consumer-in-0:
#            consumer:
#              configuration:
#                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
##                value.deserializer: com.sagar.audit.watcher.domain.MessageDeserializer
#                value.deserializer: io.cloudevents.kafka.CloudEventDeserializer
  devtools:
    add-properties: true

logging:
  level:
    root: INFO

---
cloud:
  function.definition: consumer;producer
  stream:
    bindings:
      producer-out-0:
        destination: audit
      consumer-in-0:
        destination: audit
    kafka:
      binder:
        brokers: localhost:9092
devtools:
  add-properties: true